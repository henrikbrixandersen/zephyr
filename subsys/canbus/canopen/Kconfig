# Copyright (c) 2019 - 2021 Vestas Wind Systems A/S
# SPDX-License-Identifier: Apache-2.0

menuconfig CANOPEN
	bool "CANopen protocol support"
	depends on CAN
	help
	  Enable CANopen (EN 50325-4) (CiA301) protocol
	  support.

if CANOPEN

module = CANOPEN
module-str = CANopen
source "subsys/logging/Kconfig.template.log_config"

choice CANOPEN_STACK
	prompt "CANopen Stack"

config CANOPEN_STACK_CANOPENNODE
	bool "CANopenNode"
	select CANOPENNODE
	help
	  CANopenNode stack.

config CANOPEN_STACK_NATIVE
	bool "Native [EXPERIMENTAL]"
	select POLL
	select SMF
	select SMF_ANCESTOR_SUPPORT
	select SMF_INITIAL_TRANSITION
	select EXPERIMENTAL
	help
	  Zephyr native CANopen stack.

endchoice # CANOPEN_STACK

if CANOPEN_STACK_NATIVE

config CANOPEN_SHELL
	bool "CANopen shell"
	depends on SHELL
	select CANOPEN_OD_INFO
	help
	  Enable the CANopen shell module.

config CANOPEN_USE_DEDICATED_WORKQUEUE
	bool "Use a dedicated CANopen workqueue"
	help
	  Use a dedicated workqueue for CANopen protocol stack processing. If not selected, the
	  CANopen protocol stack will use the system workqueue for processing.

if CANOPEN_USE_DEDICATED_WORKQUEUE

config CANOPEN_WORKQUEUE_STACK_SIZE
	int "CANopen workqueue stack size"
	default SYSTEM_WORKQUEUE_STACK_SIZE
	help
	  Size of the stack used for the dedicated CANopen workqueue thread.

config CANOPEN_WORKQUEUE_PRIORITY
	int "CANopen workqueue priority"
	default SYSTEM_WORKQUEUE_PRIORITY
	help
	  Priority level for the dedicated CANopen workqueue thread.

config CANOPEN_WORKQUEUE_NO_YIELD
	bool "CANopen workqueue no yield"
	default SYSTEM_WORKQUEUE_NO_YIELD
	help
	  By default, the CANopen workqueue yields between each work item, to prevent other threads
	  from being starved. Selecting this removes this yield.

config CANOPEN_WORKQUEUE_WORK_TIMEOUT_MS
	int "CANopen workqueue work timeout in milliseconds"
	default SYSTEM_WORKQUEUE_WORK_TIMEOUT_MS
	help
	  Set to 0 to disable work timeout for the CANopen workqueue. Option has no effect if
	  WORKQUEUE_WORK_TIMEOUT is not enabled.

endif # CANOPEN_USE_DEDICATED_WORKQUEUE

config CANOPEN_OD_INFO
	bool "Store CANopen object dictionary information"
	help
	  Store CANopen object dictionary information in an iterable section. This allows object
	  dictionary clients to automatically discover the available CANopen object dictionaries at
	  run-time.

config CANOPEN_NMT_EVENT_MSGQ_SIZE
	int "Network Management (NMT) event message queue size"
	range 1 $(UINT32_MAX)
	default 10
	help
	  Number of per-instance NMT events that can be queued for the finite-state machine.

config CANOPEN_SDO_REQUEST_MSGQ_SIZE
	int "Service Data Object (SDO) request message queue size"
	range 1 $(UINT32_MAX)
	default 3
	help
	  Number of per-instance SDO requests that can be queued for the SDO server protocol engine.

	  Since SDO is a confirmed service (using a request/response protocol between one SDO client
	  and one SDO server), a node on a well-behaved CANopen network will only require one SDO
	  request to be enqueued at any point in time.

	  However, if multiple SDO clients attempt to access the same SDO server simultaneously, the
	  protocol engine needs to be able to enqueue multiple requests in order to properly abort
	  the conflicting SDO requests.

endif # CANOPEN_STACK_NATIVE

endif # CANOPEN
